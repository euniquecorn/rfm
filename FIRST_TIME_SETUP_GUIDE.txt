================================================================================
            RFM APPAREL SYSTEM - FIRST TIME SETUP GUIDE
         (For New Developers Who Just Cloned/Pulled the Repo)
================================================================================

This guide is for someone who just pulled/cloned the repository for the 
first time and needs to set everything up.

================================================================================
                         PREREQUISITES (Install First)
================================================================================

Before you start, make sure you have these installed:

1. NODE.JS (v18 or higher)
   Download from: https://nodejs.org/
   Check if installed: node --version

2. NPM (comes with Node.js)
   Check if installed: npm --version

3. GIT (for cloning the repo)
   Download from: https://git-scm.com/
   Check if installed: git --version


================================================================================
                         STEP 1: CLONE THE REPOSITORY
================================================================================

If you haven't cloned the repo yet:

git clone <repository-url>
cd rfm

Or if you already have the folder:

cd C:\xampp\htdocs\rfm


================================================================================
                    STEP 2: INSTALL DEPENDENCIES
================================================================================

You need to install dependencies for BOTH frontend and backend:

INSTALL FRONTEND DEPENDENCIES:
------------------------------
(In the root directory: C:\xampp\htdocs\rfm)

npm install

This will install all Angular and frontend packages.
Wait for it to complete (may take a few minutes).


INSTALL BACKEND DEPENDENCIES:
------------------------------
(Navigate to backend folder)

cd backend
npm install
cd ..

This will install all Node.js/Express backend packages.


================================================================================
                    STEP 3: SET UP ENVIRONMENT FILES
================================================================================

The repository uses Aiven Cloud MySQL database. You need to create .env files:

CREATE BACKEND .env FILE:
-------------------------
Navigate to: C:\xampp\htdocs\rfm\backend
Create a file named: .env

Add this content:

DB_HOST=rfmdb-euniquecorn.d.aivencloud.com
DB_PORT=28152
DB_USER=Marcc
DB_PASSWORD=Marcc1234
DB_NAME=rfm_db
PORT=3001
NODE_ENV=development


CREATE ROOT .env FILE (Optional):
----------------------------------
Navigate to: C:\xampp\htdocs\rfm
Create a file named: .env

Add this content:

DB_HOST=rfmdb-euniquecorn.d.aivencloud.com
DB_PORT=28152
DB_USER=Marcc
DB_PASSWORD=Marcc1234
DB_NAME=rfm_db
PORT=4000
NODE_ENV=development
CORS_ORIGIN=http://localhost:4200
API_BASE_URL=http://localhost:4000/api


IMPORTANT NOTE:
---------------
The .env files are in .gitignore, so they won't be in the repository.
You need to create them manually or ask the team for the credentials.


================================================================================
                    STEP 4: VERIFY DATABASE CONNECTION
================================================================================

The system uses Aiven Cloud MySQL, so you DON'T need to:
- Install XAMPP
- Run local MySQL
- Create database manually

The database is already set up in the cloud!

Tables will be created automatically when you first run the backend.


================================================================================
                    STEP 5: BUILD THE BACKEND
================================================================================

Navigate to backend folder and build the TypeScript code:

cd backend
npm run build
cd ..

This compiles the TypeScript files to JavaScript.


================================================================================
                    STEP 6: START THE SYSTEM
================================================================================

Now you're ready to run the system!

TERMINAL 1 - START BACKEND:
---------------------------
cd backend
npm run dev

âœ… Backend should start on: http://localhost:3001
âœ… You should see: "ðŸš€ RFM Backend API server listening on http://localhost:3001"
âœ… Database connection message should appear


TERMINAL 2 - START FRONTEND:
----------------------------
(Open a NEW terminal window)

cd C:\xampp\htdocs\rfm
npm start

âœ… Frontend should start on: http://localhost:4200
âœ… Browser should automatically open
âœ… Angular compilation should complete


================================================================================
                    STEP 7: VERIFY EVERYTHING WORKS
================================================================================

1. CHECK BACKEND:
   Open: http://localhost:3001
   You should see: API endpoint documentation

2. CHECK BACKEND HEALTH:
   Open: http://localhost:3001/api/health
   You should see: {"status":"OK","message":"Backend server is running"}

3. CHECK FRONTEND:
   Open: http://localhost:4200
   You should see: RFM Apparel landing page

4. TEST LOGIN:
   Go to: http://localhost:4200/login
   Use admin account:
   - Email: admin@rfm.com
   - Password: admin123


================================================================================
                    COMMON ISSUES & SOLUTIONS
================================================================================

ISSUE: "npm install" fails
SOLUTION: 
   - Delete node_modules folder
   - Delete package-lock.json
   - Run: npm install again


ISSUE: "Port 3001 already in use"
SOLUTION: 
   Kill all Node processes:
   Get-Process -Name node | Stop-Process -Force
   Then restart backend


ISSUE: "Port 4200 already in use"
SOLUTION:
   Kill all Node processes:
   Get-Process -Name node | Stop-Process -Force
   Then restart frontend


ISSUE: "Database connection failed"
SOLUTION:
   - Check if .env file exists in backend folder
   - Verify database credentials are correct
   - Make sure you have internet connection (database is in cloud)


ISSUE: "Cannot find module 'bcrypt'"
SOLUTION:
   cd backend
   npm install bcrypt @types/bcrypt
   npm run build


ISSUE: Frontend shows blank page
SOLUTION:
   - Check browser console for errors
   - Make sure backend is running first
   - Clear browser cache and refresh


ISSUE: "TypeError: Cannot read property..."
SOLUTION:
   - Stop both frontend and backend
   - Delete node_modules in root AND backend
   - Run npm install in both locations
   - Rebuild and restart


================================================================================
                    PROJECT STRUCTURE (For Reference)
================================================================================

rfm/
â”œâ”€â”€ backend/                    # Backend API (Node.js + Express)
â”‚   â”œâ”€â”€ src/                   # TypeScript source files
â”‚   â”‚   â”œâ”€â”€ config/           # Database configuration
â”‚   â”‚   â”œâ”€â”€ routes/           # API routes (auth, users, canvas)
â”‚   â”‚   â”œâ”€â”€ services/         # Business logic
â”‚   â”‚   â””â”€â”€ server.ts         # Main server file
â”‚   â”œâ”€â”€ dist/                 # Compiled JavaScript (auto-generated)
â”‚   â”œâ”€â”€ .env                  # Environment variables (YOU CREATE THIS)
â”‚   â”œâ”€â”€ package.json          # Backend dependencies
â”‚   â””â”€â”€ tsconfig.json         # TypeScript config
â”‚
â”œâ”€â”€ src/                       # Frontend source (Angular)
â”‚   â”œâ”€â”€ app/                  # Angular application
â”‚   â”‚   â”œâ”€â”€ components/      # UI components
â”‚   â”‚   â”œâ”€â”€ services/        # Angular services (auth, api)
â”‚   â”‚   â”œâ”€â”€ guards/          # Route guards
â”‚   â”‚   â””â”€â”€ app.routes.ts    # Route configuration
â”‚   â””â”€â”€ styles.css           # Global styles
â”‚
â”œâ”€â”€ .env                      # Root environment variables (OPTIONAL)
â”œâ”€â”€ package.json              # Frontend dependencies
â”œâ”€â”€ angular.json              # Angular configuration
â”œâ”€â”€ tsconfig.json             # TypeScript configuration
â”œâ”€â”€ HOW_TO_RUN_&_STOP_SYSTEM.txt    # System operation guide
â””â”€â”€ FIRST_TIME_SETUP_GUIDE.txt      # This file


================================================================================
                    QUICK START CHECKLIST
================================================================================

For someone who just pulled the repo, follow this checklist:

â–¡ 1. Install Node.js (v18+)
â–¡ 2. Clone/pull the repository
â–¡ 3. Run "npm install" in ROOT directory
â–¡ 4. Run "npm install" in BACKEND directory
â–¡ 5. Create backend/.env file with database credentials
â–¡ 6. Run "npm run build" in backend directory
â–¡ 7. Start backend: cd backend â†’ npm run dev
â–¡ 8. Start frontend: cd root â†’ npm start
â–¡ 9. Open http://localhost:4200
â–¡ 10. Test login with admin@rfm.com / admin123


================================================================================
                    DEVELOPMENT WORKFLOW
================================================================================

DAILY STARTUP (After Initial Setup):
-------------------------------------
You only need to do the initial setup ONCE!

After that, just:
1. Open Terminal 1: cd backend â†’ npm run dev
2. Open Terminal 2: cd root â†’ npm start
3. Start coding!


MAKING CHANGES:
---------------
Frontend: Auto-reloads when you save files
Backend: Restart required (Ctrl+C, then npm run dev again)


BEFORE COMMITTING CODE:
------------------------
1. Make sure both frontend and backend run without errors
2. Test your changes
3. Don't commit:
   - node_modules/ folders
   - .env files
   - dist/ folders
   - .DS_Store or other OS files


================================================================================
                    TEAM COLLABORATION TIPS
================================================================================

1. ALWAYS PULL BEFORE YOU START WORKING:
   git pull origin main

2. INSTALL DEPENDENCIES AFTER PULLING:
   If package.json changed, run:
   - npm install (in root)
   - npm install (in backend)

3. ASK FOR .env CREDENTIALS:
   Don't commit .env files
   Ask team lead for the correct database credentials

4. COMMUNICATE BREAKING CHANGES:
   If you change database structure or API endpoints,
   inform the team!

5. TEST BEFORE PUSHING:
   Make sure everything works before pushing code


================================================================================
                    NEED HELP?
================================================================================

If you're stuck:

1. Check this guide first
2. Check HOW_TO_RUN_&_STOP_SYSTEM.txt
3. Check browser console for errors (F12)
4. Check terminal for error messages
5. Ask the team lead or repository owner


================================================================================
                    SYSTEM CREDENTIALS
================================================================================

DATABASE (Aiven Cloud MySQL):
-----------------------------
Host: rfmdb-euniquecorn.d.aivencloud.com
Port: 28152
User: Marcc
Password: Marcc1234
Database: rfm_db


ADMIN LOGIN:
------------
Email: admin@rfm.com
Password: admin123


CUSTOMER ACCOUNT:
-----------------
Register new account at: http://localhost:4200/signup


================================================================================
                    WHAT'S NEXT?
================================================================================

After setup is complete:

1. Explore the codebase
2. Read the authentication documentation (auth-and-role-access.plan.md)
3. Try logging in as admin
4. Try registering as a customer
5. Explore the admin panel
6. Check out the code structure
7. Ask questions if anything is unclear


================================================================================
                    END OF FIRST TIME SETUP GUIDE
================================================================================

Welcome to the RFM Apparel System!
Happy coding! ðŸš€

Last Updated: October 9, 2025
Version: 1.0

